{
	"info": {
		"_postman_id": "b9fb3cb0-4951-47d6-bd08-a22fa5275832",
		"name": "Lemon Cash",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Alta de un usuario ok",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User\");",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"created\");",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.collectionVariables.set(\"userId\", pm.response.text().split(\" \")[1]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra\",\n    \"email\":\"camila@gmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - email duplicated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Duplicate entry 'camila@gmail.com'\");",
							"});",
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra2\",\n    \"email\":\"camila@gmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - username duplicated",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Duplicate entry 'camilaserra'\");",
							"});",
							"pm.test(\"Status code is 500\", function () {",
							"    pm.response.to.have.status(500);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra\",\n    \"email\":\"camila@hotmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - missing first name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    const numberOfErrors = resBody.fieldErrors.length;",
							"    pm.expect(numberOfErrors).to.eql(1);",
							"    pm.expect(resBody.fieldErrors[0].field).to.eql(\"firstName\")",
							"    pm.expect(resBody.fieldErrors[0].message).to.eql(\"must not be null\")",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra\",\n    \"email\":\"camila@gmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - missing last name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    const numberOfErrors = resBody.fieldErrors.length;",
							"    pm.expect(numberOfErrors).to.eql(1);",
							"    pm.expect(resBody.fieldErrors[0].field).to.eql(\"lastName\")",
							"    pm.expect(resBody.fieldErrors[0].message).to.eql(\"must not be null\")",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"username\":\"camilaserra\",\n    \"email\":\"camila@gmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - missing username",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    const numberOfErrors = resBody.fieldErrors.length;",
							"    pm.expect(numberOfErrors).to.eql(1);",
							"    pm.expect(resBody.fieldErrors[0].field).to.eql(\"username\")",
							"    pm.expect(resBody.fieldErrors[0].message).to.eql(\"must not be null\")",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"email\":\"camila@gmail.com\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - missing email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    const numberOfErrors = resBody.fieldErrors.length;",
							"    pm.expect(numberOfErrors).to.eql(1);",
							"    pm.expect(resBody.fieldErrors[0].field).to.eql(\"email\")",
							"    pm.expect(resBody.fieldErrors[0].message).to.eql(\"must not be null\")",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra\",\n    \"password\":\"mypass\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Alta de un usuario - missing password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    const numberOfErrors = resBody.fieldErrors.length;",
							"    pm.expect(numberOfErrors).to.eql(1);",
							"    pm.expect(resBody.fieldErrors[0].field).to.eql(\"password\")",
							"    pm.expect(resBody.fieldErrors[0].message).to.eql(\"must not be null\")",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"firstName\":\"Camila\",\n    \"lastName\":\"Serra\",\n    \"username\":\"camilaserra\",\n    \"email\":\"camila@gmail.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtenci√≥n de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    pm.expect(resBody.firstName).to.eql(\"Camila\");",
							"    pm.expect(resBody.lastName).to.eql(\"Serra\");",
							"    pm.expect(resBody.username).to.eql(\"camilaserra\");",
							"    pm.expect(resBody.email).to.eql(\"camila@gmail.com\");",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/{{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtenci√≥n de un usuario - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    const resBody = pm.response.json();",
							"    pm.expect(resBody.message).to.eql(\"'id' parameter should be of type Long\");",
							"});",
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/users/a",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"users",
						"a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Registrar un nuevo movimiento",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Movement\");",
							"});",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"performed\");",
							"});",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.collectionVariables.set(\"movementId\", pm.response.text().split(\" \")[1]);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\":10.1234567,\n    \"userId\":{{userId}},\n    \"currencyName\":\"BTC\",\n    \"movementType\":\"deposit\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/movements",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movements"
					]
				}
			},
			"response": []
		},
		{
			"name": "Listar movimientos de un usuario",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/movements/?user_id={{userId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"movements",
						""
					],
					"query": [
						{
							"key": "user_id",
							"value": "{{userId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "movementId",
			"value": ""
		}
	]
}